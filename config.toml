#############################
#                           #
# viper web server 配置文件 #
#                           #
#############################



########## 部署环境标志
# 该值关联影响其他配置，如数据库， redis 等涉及不同环境的配置
# 如 配置为 localhost ， 使用 goutils 获取 mysql 相关实例时将使用 [mysql.localhost] 的配置
env = "localhost"


########## 业务相关配置
[app]
    # 并发拉取数据时channel的大小
    chan_size = 1

    [app.cronexp]
        # sync_fund = "0 6 * * 1-5"
        # sync_fund_managers = "0 5 * * 1-5"
        # sync_industry_list = "0 4 * * 1-5"
        sync_global_vars = "0 6 * * 1-5"


########## server 相关配置
[server]
    # server 运行地址，支持 HTTP 端口 ":port" 或 UNIX Socket "unix:/file"
    addr = ":9527"
    # gin mode ，可选值： debug 、 test 、 release
    mode = "debug"
    # 开启 pprof
    pprof = true
    # 开启 prometheus metrics
    metrics = true
    host_url = "https://axiaoxin.com/investool"



########## 静态文件相关配置
[statics]
    # 网页模板路径
    tmpl_path = "html/*"
    # 静态文件 URL 路径，网页中通过 /statics/js/xx.js 访问资源，
    url = "/statics"



########## token bucket 请求频率限制配置
[ratelimiter]
    # 是否开启 ratelimiter 请求频率限制
    enable = true
    # 限频方式： mem->进程内存； redis.<WHICH>->使用用配置文件中对应的 redis 配置，如 redis.localhost
    type = "mem"



########## 日志相关配置
[logging]
    # 日志级别，可选值： debug info warn error dpanic panic fatal
    level = "info"
    # 日志格式，可选值： json console
    format = "json"
    # 日志输出路径： stdout, stderr, logrotate:///path/to/logfile
    output_paths = ["stdout"]
    # 是否关闭打印 caller 字段
    disable_caller = false
    # 是否关闭打印 stacktrace 字段
    disable_stacktrace = true

    ## 动态修改日志级别 http 服务配置
    [logging.atomic_level_server]
        # http 服务端口
        addr = ":4870"
        # 接口 url path
        path = "/"

    ## 访问日志相关配置
    [logging.access_logger]
        # 打印更多访问信息字段
        enable_details = false
        # 打印 context 中的 keys 信息，慎用，推荐仅开发调试使用
        enable_context_keys = false
        # 打印请求 Header ，慎用，推荐仅开发调试使用
        enable_request_header = false
        # 打印请求的表单信息，慎用，推荐仅开发调试使用
        enable_request_form = false
        # 打印请求 body ，慎用，严重影响性能
        enable_request_body = false
        # 打印响应 body ，慎用，严重影响性能
        enable_response_body = false
        # 精确指定不打印日志的 path
        skip_paths = []
        # 正则表达式指定不打印日志的 path
        skip_path_regexps = [
            "/x/apidocs/.+\\.json",
            "/x/apidocs/.+\\.js",
            "/x/apidocs/.+\\.css",
            ".+\\.js",
            ".+\\.css",
            ".+\\.png",
        ]
        # 慢请求阈值（毫秒）请求处理时间大于该值使用 WARN 级别打印请求日志
        slow_threshold = 200

    ## 日志输出到文件时的 rotate 配置
    # 示例： 若 logging.output_paths 配置为： logrotate:///tmp/x.log
    # 日志会输出到文件 /tmp/x.log 并按以下策略进行 rotate
    [logging.logrotate]
        # 备份文件最大保存天数
        max_age = 30
        # 最大保存的备份文件数
        max_backups = 10
        # 最大日志文件大小 单位： M
        max_size = 100
        # 是否压缩备份文件
        compress = true
        # 压缩文件名是否使用 localtime
        localtime = true



########## apidocs 相关配置
[apidocs]
    # 文档标题
    title = "investool swagger apidocs"
    # 文档描述
    desc = "Using investool to develop gin app on fly."
    # 请求地址，端口要和 server.addr 一致，浏览器访问时需要区分 127.0.0.1 和 localhost
    host = "localhost:9527"
    # 请求地址的 basepath
    basepath = "/"
    # 支持的请求 schemes
    schemes = ["http"]



########## basic auth 相关配置
[basic_auth]
    # 登录用户名
    username = "admin"
    # 登录密码
    password = "admin"
